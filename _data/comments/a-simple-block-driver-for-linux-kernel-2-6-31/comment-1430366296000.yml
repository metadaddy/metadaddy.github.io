name: Sarge
date: '2015-04-29 20:58:16'
url: ''
message: "(trying once more):\nIt's good that you are still in the loop here. I think there is a bug in your sbd_request function.\n\nYou have:\n\tstruct request *req;\n\n\treq = blk_fetch_request(q);\n\twhile (req != NULL) {\n\t\t// blk_fs_request() was removed in 2.6.36 - many thanks to\n\t\t// Christian Paro for the heads up and fix...\n\t\t//if (!blk_fs_request(req)) {\n\t\tif (req == NULL || (req-&gt;cmd_type != REQ_TYPE_FS)) {\n\t\t\tprintk (KERN_NOTICE \"Skip non-CMD request\\n\");\n\t\t\t__blk_end_request_all(req, -EIO);\n\t\t\tcontinue;\n\t\t}\n\t\tsbd_transfer(&amp;Device, blk_rq_pos(req), blk_rq_cur_sectors(req),\n\t\t\t\tbio_data(req-&gt;bio), rq_data_dir(req));\n\t\tif ( ! __blk_end_request_cur(req, 0) ) {\n\t\t\treq = blk_fetch_request(q);\n\t\t}\n\t}\n\n\nin:\n\t\tif (req == NULL || (req-&gt;cmd_type != REQ_TYPE_FS)) {\n\t\t\tprintk (KERN_NOTICE \"Skip non-CMD request\\n\");\n\t\t\t__blk_end_request_all(req, -EIO);\n\t\t\tcontinue;\n\t\t}\n\nif req is _not_ NULL, then the request will be ended, but req still has an unmodfied non-NULL value so, after the continue, it will go to the top of the loop which will then come right back into this block and perhaps crash the kernel if trying to end an already ended req is not handled right in the kernel. Otherwise, this is an endless loop. Unsure what you want to do here, as this is non-standard code from all of the other drivers I have been able to look at. Please advise."
email: d6161c4b308cbf350f83ebae45e18ab9
